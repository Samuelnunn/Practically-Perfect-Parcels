[{"/home/samuel/App-Academy/Week16-work/Redux-react-project/frontend/src/index.js":"1","/home/samuel/App-Academy/Week16-work/Redux-react-project/frontend/src/App.js":"2","/home/samuel/App-Academy/Week16-work/Redux-react-project/frontend/src/store/csrf.js":"3","/home/samuel/App-Academy/Week16-work/Redux-react-project/frontend/src/store/session.js":"4","/home/samuel/App-Academy/Week16-work/Redux-react-project/frontend/src/store/index.js":"5","/home/samuel/App-Academy/Week16-work/Redux-react-project/frontend/src/components/LoginFormPage/index.js":"6","/home/samuel/App-Academy/Week16-work/Redux-react-project/frontend/src/components/signUp/index.js":"7","/home/samuel/App-Academy/Week16-work/Redux-react-project/frontend/src/components/Navigation/index.js":"8","/home/samuel/App-Academy/Week16-work/Redux-react-project/frontend/src/components/Navigation/ProfileButton.js":"9","/home/samuel/App-Academy/Week16-work/Redux-react-project/frontend/src/components/HomePage/index.js":"10","/home/samuel/App-Academy/Week16-work/Redux-react-project/frontend/src/store/products.js":"11","/home/samuel/App-Academy/Week16-work/Redux-react-project/frontend/src/components/ProductsList/index.js":"12","/home/samuel/App-Academy/Week16-work/Redux-react-project/frontend/src/store/cart.js":"13","/home/samuel/App-Academy/Week16-work/Redux-react-project/frontend/src/components/ShoppingCart/index.js":"14","/home/samuel/App-Academy/Week16-work/Redux-react-project/frontend/src/store/reviews.js":"15","/home/samuel/App-Academy/Week16-work/Redux-react-project/frontend/src/components/Reviews/index.js":"16"},{"size":898,"mtime":1611877972486,"results":"17","hashOfConfig":"18"},{"size":1289,"mtime":1611876297276,"results":"19","hashOfConfig":"18"},{"size":745,"mtime":1609194211396,"results":"20","hashOfConfig":"18"},{"size":1895,"mtime":1609691319108,"results":"21","hashOfConfig":"18"},{"size":877,"mtime":1609771547786,"results":"22","hashOfConfig":"18"},{"size":1989,"mtime":1609722465739,"results":"23","hashOfConfig":"18"},{"size":3655,"mtime":1611880820802,"results":"24","hashOfConfig":"18"},{"size":1347,"mtime":1611944498922,"results":"25","hashOfConfig":"18"},{"size":1123,"mtime":1611346439704,"results":"26","hashOfConfig":"18"},{"size":652,"mtime":1611873504549,"results":"27","hashOfConfig":"18"},{"size":713,"mtime":1609371355322,"results":"28","hashOfConfig":"18"},{"size":2868,"mtime":1611868300238,"results":"29","hashOfConfig":"18"},{"size":2703,"mtime":1611768440436,"results":"30","hashOfConfig":"18"},{"size":3087,"mtime":1611883409291,"results":"31","hashOfConfig":"18"},{"size":2827,"mtime":1611946222344,"results":"32","hashOfConfig":"18"},{"size":3142,"mtime":1611952261994,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"dkghde",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},"/home/samuel/App-Academy/Week16-work/Redux-react-project/frontend/src/index.js",[],["73","74"],"/home/samuel/App-Academy/Week16-work/Redux-react-project/frontend/src/App.js",[],"/home/samuel/App-Academy/Week16-work/Redux-react-project/frontend/src/store/csrf.js",[],"/home/samuel/App-Academy/Week16-work/Redux-react-project/frontend/src/store/session.js",[],"/home/samuel/App-Academy/Week16-work/Redux-react-project/frontend/src/store/index.js",[],"/home/samuel/App-Academy/Week16-work/Redux-react-project/frontend/src/components/LoginFormPage/index.js",[],"/home/samuel/App-Academy/Week16-work/Redux-react-project/frontend/src/components/signUp/index.js",["75"],"import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport * as sessionActions from '../../store/session';\nimport './SignupForm.css';\n\nfunction SignupFormPage() {\n    const dispatch = useDispatch();\n    const sessionUser = useSelector((state) => state.session.user);\n    const [firstName, setFirstName] = useState('')\n    const [lastName, setLastName] = useState('')\n    const [username, setUsername] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [errors, setErrors] = useState([])\n\n    if (sessionUser) return <Redirect to=\"/home\" />;\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (password === confirmPassword) {\n            setErrors([]);\n            return dispatch(sessionActions.signUp({ firstName, lastName, username, email, password}))\n                .catch( res => {\n                    if ( res.data && res.data.errors) setErrors(res.data.errors);\n                });\n        }\n        return setErrors(['Password must match Password confirmation field.'])\n    };\n\n    return (\n        <div>\n        <div className={'container'}>\n        <form onSubmit={handleSubmit}>\n            <ul className={'input-field'} className={'form'}>\n                {errors.map((error, idx) => <li key={idx}>{error}</li>)}\n            </ul>\n            <h2 className={'login-text'}>Sign Up</h2>\n            <label className={'input-field'}>\n                First Name:\n                <input\n                    type=\"text\"\n                    value={firstName}\n                    onChange={(e) => setFirstName(e.target.value)}\n                    required\n                />\n            </label>\n            <label className={'input-field'}>\n                LastName: \n                <input\n                    type=\"text\"\n                    value={lastName}\n                    onChange={(e) => setLastName(e.target.value)}\n                    required\n                />\n            </label>\n            <label className={'input-field pad-me'}>\n                Username\n                <input\n                    type=\"text\"\n                    value={username}\n                    onChange={(e) => setUsername(e.target.value)}\n                    required\n                />\n            </label>\n            <label className={'input-field pad-me'}>\n                Email\n                <input\n                     type=\"text\"\n                     value={email}\n                     onChange={(e) => setEmail(e.target.value)}\n                     required\n                />\n            </label>\n            <label className={'input-field pad-me'}>\n                Password\n                <input\n                    type=\"password\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                    required\n                />\n            </label>\n            <label className={'input-field pad-me'}>\n                Confirm Password\n                <input\n                    type=\"password\"\n                    value={confirmPassword}\n                    onChange={(e) => setConfirmPassword(e.target.value)}\n                    required\n                />\n            </label>\n            <div className={'col-md-3 col-sm-3 cox-xs-6'}>\n                <button type=\"submit\" className={'button btn-sm animated-button'}>Sign Up</button>\n            </div>\n        </form>\n        </div>\n        </div>\n      );\n    }\n    \nexport default SignupFormPage;\n\n","/home/samuel/App-Academy/Week16-work/Redux-react-project/frontend/src/components/Navigation/index.js",["76","77"],"import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport ProfileButton from './ProfileButton';\nimport './Navigation.css';\n\nfunction Navigation({ isLoaded }){\n  const sessionUser = useSelector(state => state.session.user);\n\n  let sessionLinks;\n  if (sessionUser) {\n    sessionLinks = (\n      <ProfileButton user={sessionUser} />\n    );\n  } else {\n    sessionLinks = (\n      <div className=\"main-div\">\n        <div className=\"castle\">\n          <img className='product-pics' src={`/castle.png`} />\n            <div className='nav-buttons'>\n            <NavLink className=\"navigationButtons\" to=\"/login\">Log In</NavLink>\n            <NavLink className=\"navigationButtons\" to=\"/signup\">Sign Up</NavLink>\n            </div>\n        </div>\n        <div className=\"logo-div\">\n          <img className='product-pics' src={`/logo.png`} />\n        </div>\n        </div>\n    );\n  }\n\n  return (\n    <ul id='top-navigation-bar'>\n      <li>\n        <NavLink className=\"navigationButtons\" to=\"/home\" >\n        <img src=\"https://d1fdloi71mui9q.cloudfront.net/tvlc0BuRtq419gf3E6w7_5WATz9hU3H8m5Q8g\"\n         alt=\"Profile\" data-testid=\"ProfileImage\"  className='homeButton' >\n        </img>\n        </NavLink>\n        {isLoaded && sessionLinks}\n      </li>\n    </ul>\n  );\n}\n\nexport default Navigation;","/home/samuel/App-Academy/Week16-work/Redux-react-project/frontend/src/components/Navigation/ProfileButton.js",[],"/home/samuel/App-Academy/Week16-work/Redux-react-project/frontend/src/components/HomePage/index.js",[],"/home/samuel/App-Academy/Week16-work/Redux-react-project/frontend/src/store/products.js",[],"/home/samuel/App-Academy/Week16-work/Redux-react-project/frontend/src/components/ProductsList/index.js",["78"],"import { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchAllProducts} from '../../store/products';\nimport { addItemToTheCart } from '../../store/cart';\nimport { addReviewToThePage, fetchAllReviews } from '../../store/reviews';\nimport ProductReviews from '../Reviews';\nimport './ProductList.css';\nimport FlipCard from 'fc-card-component';\n\n\n\nconst Product = ({oneProduct}) => {\n    const dispatch = useDispatch();\n    const userId = useSelector(state => state.session.user.id);\n    const [cartId ] = useState(1);\n\n    useEffect(() => {\n        const reviewFetch = fetchAllReviews();\n        dispatch(\n            reviewFetch\n            );\n    }, [dispatch]);\n\n    // useEffect(() => {\n    //     const singleProductId = oneProduct.id;\n    //     dispatch(addReviewToThePage(singleProductId, userId, review))    \n    // },[review])\n\n    const handleClick = (e) => {\n        e.preventDefault();\n        const singleProductId = oneProduct.id;\n        const neededPrice = oneProduct.price;\n        dispatch(addItemToTheCart(cartId, singleProductId, userId, neededPrice));\n    };\n\n\n\n    return (\n        <FlipCard\n        id=\"font-card\"\n        className='flippy-card'\n        height={800}\n        width={600}\n        rotationAxis=\"y\"\n        // colorFront=\"yellow\"\n        // textColorFront=\"cream\"\n        textFront={\n            <div className=\"products-list\" id=\"front-card\">\n                <p id='hellothere'>{oneProduct.productName}</p>\n                <img className='product-pics' src={`/${oneProduct.id}.jpg`} alt={oneProduct.id} />\n                <p>{oneProduct.productDescription}</p>\n        </div>\n        }\n        textBack={\n            <div className=\"products-list\" id=\"back-card\">\n                <p>{oneProduct.price}</p>\n                <ProductReviews oneProduct={oneProduct} />\n                <button  className='button' onClick={handleClick}>Add to cart</button> \n            </div>\n        }\n        // innerPadding={20}\n        fontSize={27}\n        colorFront=\"yellow\"\n        textColorFront=\"cream\"\n        >\n        \n        </FlipCard>\n    )\n}\n\n\nconst ProductsList = () => {\n    const dispatch = useDispatch();\n    const allProducts = useSelector(fullReduxState => {\n        return fullReduxState.products;\n    });\n\n    useEffect(() => {\n        const productFetch = fetchAllProducts();\n        dispatch(\n            productFetch\n        );\n    }, [dispatch]);\n\n    return (\n\n            <div className='product-component'>\n                {!allProducts && <h2>Finding Products!</h2>}\n                {allProducts && allProducts.map(product => {\n                    return (\n                    <Product oneProduct={product} key={product.productName}>\n                     </Product>\n                    )\n                })}\n            </div>\n    );\n};\nexport default ProductsList;","/home/samuel/App-Academy/Week16-work/Redux-react-project/frontend/src/store/cart.js",[],"/home/samuel/App-Academy/Week16-work/Redux-react-project/frontend/src/components/ShoppingCart/index.js",["79"],"import { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchAllCartItems, removeItemFromTheCart } from '../../store/cart';\nimport './ShoppingCart.css'\n\nconst SingleCartItem = ({cartId, cartItem }) => {\n    const user = useSelector(state => state.session.user);\n    const cart = useSelector(state => state.cart)\n    // const cartItems = Object.values(cart)\n    const dispatch = useDispatch();\n    const [ quantity, setQuantity ] = useState(1);\n    // const neededItem = cartItems.map(item => {\n    //     return item.productId }\n    // )\n\n    const handleRemoveClick = async (e) => {\n        console.log(\"cart id\", cartItem.id)\n        await dispatch(removeItemFromTheCart(cartId))\n        setQuantity(0)\n    }\n\n    useEffect(()=>{\n        dispatch(fetchAllCartItems(user.id))\n    }, [user.id, quantity, dispatch])\n\n    const quantityAddition = () => {\n        return setQuantity(quantity + 1);\n    }\n\n    const quantitySubtraction = () => {\n        if (quantity >= 2) {\n        return setQuantity(quantity - 1);\n        } else  {\n            handleRemoveClick()\n        }\n    }\n\n    return (\n        <>\n            <div className='cart-container'> \n                <div className='cart-component'> \n                    <h3><span className=\"shopping-cart\">{ `${cartItem.productName}: ${cartItem.price}` }</span></h3>\n                        <div>   \n                            <img className='product-pics' src={`/${cartItem.id}.jpg`} alt={cartItem.id} />\n                        </div>\n                        <div className='quantity'>\n                            <button className='increment'  onClick={quantitySubtraction}>-</button>\n                            Quantity:   {quantity}\n                            <button className='increment' onClick={quantityAddition}>+</button>\n                        </div>\n                        <div>\n                            <button className='cart-button' onClick={handleRemoveClick}>Remove Item </button>\n                        </div>                     \n                </div>\n            </div>\n        </>\n    )\n}\n\n\nconst CartItemsList = () => {\n    const dispatch = useDispatch();\n    const user = useSelector(state => state.session.user);\n    useEffect(() => {\n        dispatch(\n            fetchAllCartItems(user.id)\n            );\n    }, [dispatch, user.id]);\n\n\n    //useEffect, transform cart from redux, add all cart items as dependency if items\n    // already exists product.id\n    const allCartItems = useSelector(fullReduxState => {\n        return Object.values(fullReduxState.cart);\n    });\n\n    return (\n        <div>\n            {allCartItems && allCartItems.map((cartObject) => {\n                return (\n                    <>\n                        <SingleCartItem \n                            cartItem={cartObject.Product} key={cartObject.id}\n                            cartId={cartObject.id}\n                        ></SingleCartItem>\n                    </>     \n                )\n            })}\n        </div>\n    )\n   \n};\n\nexport default CartItemsList;\n","/home/samuel/App-Academy/Week16-work/Redux-react-project/frontend/src/store/reviews.js",["80"],"\nimport { fetch } from './csrf';\n\nconst ADD_A_REVIEW = \"/reviews/ADD_REVIEWS\";\nconst GET_ALL_REVIEWS = \"/reviews/GET_REVIEWS\";\nconst DELETE_A_REVIEW = \"/reviews/DELETE_A_REVIEW\";\nconst EDIT_A_REVIEW = \"/reviews/EDIT_A_REVIEW\"; \n\nconst addAReview = (review) => {\n    return {\n        type: ADD_A_REVIEW,\n        payload: review,\n    };\n};\n\nconst getReviews = (reviews) => {\n    return {\n        type: GET_ALL_REVIEWS,\n        reviews: reviews,\n    };\n};\n\nconst deleteReview = (review) => {\n    return {\n        type: DELETE_A_REVIEW,\n        reviews: review,\n    };\n};\n\nconst editReview = (review) => {\n    return {\n        type: EDIT_A_REVIEW,\n        reviews: review,\n    };\n};\n\nexport const addReviewToThePage = (productId, reviewerId, reviewText) => {\n    console.log(reviewerId)\n    return async(dispatch) => {\n        const response = await fetch(`/api/reviews`, {\n            method: 'POST',\n            body: JSON.stringify({\n                productId,\n                reviewerId,\n                reviewText\n            }),\n        });\n        if (!response.ok) throw response;\n        dispatch(\n            addAReview(response.data)\n        );\n    }   \n};\n\nexport const fetchAllReviews = () => {\n    return async (dispatch) => {\n        const response = await fetch(`/api/reviews`);\n        dispatch(\n            getReviews(response.data)\n        );\n    };\n};\n\nexport const removeAReview = (reviewerId) => async (dispatch) => {\n    console.log(reviewerId)\n    const response = await fetch(`/api/reviews`, {\n        method: 'DELETE',\n        body: JSON.stringify({\n            reviewerId\n        })\n    });\n    if (response.ok) {\n    dispatch(deleteReview(reviewerId))\n    };\n    return response\n};\n\nexport const editAReview = (reviewerId, reviewText) => async (dispatch) => {\n    console.log(reviewerId)\n    const response = await fetch(`/api/reviews`, {\n        method: 'PATCH',\n        body: JSON.stringify({\n            reviewerId,\n            reviewText\n        })\n    });\n    if (response.ok) {\n    dispatch(editAReview(reviewerId, reviewText))\n    };\n    return response\n};\n\nconst initialState = {};\n\nconst reviewReducer = (state = initialState, action) => {\n    let newState = {...state}\n    switch(action.type) {\n        case ADD_A_REVIEW:\n            console.log(\"new state!\", newState)\n            let test = {...action.payload}\n            console.log(test)\n            return test\n        case GET_ALL_REVIEWS:\n            let nextState = { ...action.reviews}\n            return nextState;\n        case DELETE_A_REVIEW: \n            newState = {...state}\n            delete newState[action.reviews]\n            return newState;\n        case EDIT_A_REVIEW: \n            newState = {...state}\n            return newState;\n        default:\n            return state;\n        };\n};\n\nexport default reviewReducer;","/home/samuel/App-Academy/Week16-work/Redux-react-project/frontend/src/components/Reviews/index.js",["81","82","83","84"],"import { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport reviewReducer, { fetchAllReviews, removeAReview, addReviewToThePage, editAReview } from '../../store/reviews';\n\n\nconst ProductReviews = ({oneProduct}) => {\n    const dispatch = useDispatch();\n    const allReviews = useSelector(state => {\n        return state.review.review\n    });\n    const userId = useSelector(state => state.session.user.id);\n\n    const [review, setReview] = useState(\"\");\n    const [errors, setErrors] = useState([]);\n\n    useEffect(() => {\n        const reviewFetch = fetchAllReviews();\n        dispatch(reviewFetch)\n    }, [dispatch, review]);\n\n    // if(review.length === 0) {\n    //     return <h3>There are no reviews for this product!</h3>\n    // }\n\n    const handleDeleteClick = async (e) => {\n        e.preventDefault();\n        const reviewToRemove = e.target.value;\n        await dispatch(removeAReview(reviewToRemove));\n    };\n    \n    const handleEditClick = async (e) => {\n        e.preventDefault();\n        const reviewToEdit= e.target.value;\n        await dispatch(reviewToEdit(reviewToEdit));\n    };\n\n    const handleReviewClick = (e) => {\n        e.preventDefault();\n        const singleProductId = oneProduct.id;\n        \n        if (review) {\n            setErrors([]);\n            return dispatch(addReviewToThePage(singleProductId, userId, review))\n            .catch(res => {\n                if (res.data && res.data.errors) setErrors(res.data.errors)\n            });\n        }\n        return setErrors(['Review field must be filled out']);\n    };\n\n\n    // logic to edit/delete review.reviewerId === userId\n\n    return (\n        <div id='product-review'>\n            <div id='all-reviews'> Reviews: </div>\n            {!allReviews && <h3>There are no reviews for this product yet</h3>}\n            {allReviews && allReviews.map(review => {\n                if (oneProduct.id === review.productId) {\n                    return (\n                        <>\n                            <div id='single-review'>\n                                <p>{review.reviewText}</p>\n                                <button onClick={handleDeleteClick} value={review.id} >Delete Review</button>\n                                <button onClick={handleEditClick} value={review.id}>Edit Review</button>\n                            </div>\n                        </>\n                    )\n                }\n            })}\n            <div>\n                <ul>\n                    {errors.map((error, idx) => <li key={idx}>{error}</li>)}\n                </ul>\n                <textarea\n                    rows='10'\n                    value='10' \n                    name='review' \n                    id={review.id}\n                    placeholder='Write a Review'\n                    value={review} \n                    onChange={e => { setReview(e.target.value) }}\n                    required\n                >\n                </textarea>\n                {<button onClick={handleReviewClick}>Submit Review</button>\n                }\n            </div>\n        </div>\n    )\n};\n\n\nexport default ProductReviews;",{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":36,"column":43,"nodeType":"91","endLine":36,"endColumn":61},{"ruleId":"92","severity":1,"message":"93","line":19,"column":11,"nodeType":"94","endLine":19,"endColumn":63},{"ruleId":"92","severity":1,"message":"93","line":26,"column":11,"nodeType":"94","endLine":26,"endColumn":61},{"ruleId":"95","severity":1,"message":"96","line":5,"column":10,"nodeType":"97","messageId":"98","endLine":5,"endColumn":28},{"ruleId":"95","severity":1,"message":"99","line":8,"column":11,"nodeType":"97","messageId":"98","endLine":8,"endColumn":15},{"ruleId":"95","severity":1,"message":"100","line":30,"column":7,"nodeType":"97","messageId":"98","endLine":30,"endColumn":17},{"ruleId":"95","severity":1,"message":"101","line":3,"column":8,"nodeType":"97","messageId":"98","endLine":3,"endColumn":21},{"ruleId":"95","severity":1,"message":"102","line":3,"column":77,"nodeType":"97","messageId":"98","endLine":3,"endColumn":88},{"ruleId":"103","severity":1,"message":"104","line":58,"column":50,"nodeType":"105","messageId":"106","endLine":58,"endColumn":52},{"ruleId":"89","severity":1,"message":"90","line":81,"column":21,"nodeType":"91","endLine":81,"endColumn":35},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'addReviewToThePage' is defined but never used.","Identifier","unusedVar","'cart' is assigned a value but never used.","'editReview' is assigned a value but never used.","'reviewReducer' is defined but never used.","'editAReview' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation"]